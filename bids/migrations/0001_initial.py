# Generated by Django 5.1.6 on 2025-08-14 21:11

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('tenders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('currency', models.CharField(choices=[('TZS', 'Tanzanian Shilling'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('JPY', 'Japanese Yen'), ('CNY', 'Chinese Yuan')], default='TZS', max_length=3)),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_evaluation', 'Under Evaluation'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='draft', max_length=20)),
                ('validity_complied', models.BooleanField(default=False)),
                ('completion_complied', models.BooleanField(default=False)),
                ('proposed_completion_days', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('jv_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bidder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bids_submitted', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_bids', to='accounts.company')),
                ('jv_partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bids_jv_partner', to=settings.AUTH_USER_MODEL)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_bids', to='tenders.tender')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BidAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('details', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_audit_logs', to='bids.bid')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bids_audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BidDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='bid_docs/%Y/%m/')),
                ('description', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_documents', to='bids.bid')),
                ('company_certification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bids_documents', to='accounts.companycertification')),
                ('company_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bids_documents', to='accounts.companydocument')),
                ('tender_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_documents', to='tenders.tenderrequireddocument')),
            ],
            options={
                'ordering': ['submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='BidEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('comments', models.TextField(blank=True)),
                ('evaluated_at', models.DateTimeField(auto_now_add=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_evaluations', to='bids.bid')),
                ('evaluator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bids_evaluated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-evaluated_at'],
            },
        ),
        migrations.CreateModel(
            name='BidExperienceResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complied', models.BooleanField(default=False)),
                ('jv_contribution', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('notes', models.TextField(blank=True)),
                ('proof', models.FileField(blank=True, null=True, upload_to='bid_experience/%Y/%m/')),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_experience_responses', to='bids.bid')),
                ('company_experience', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bids_experience_responses', to='accounts.companyexperience')),
                ('experience_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_experience_responses', to='tenders.tenderexperiencerequirement')),
            ],
            options={
                'ordering': ['experience_requirement__type'],
            },
        ),
        migrations.CreateModel(
            name='BidFinancialResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('complied', models.BooleanField(default=False)),
                ('jv_contribution', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('notes', models.TextField(blank=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_financial_responses', to='bids.bid')),
                ('financial_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_financial_responses', to='tenders.tenderfinancialrequirement')),
                ('financial_statement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bids_financial_responses', to='accounts.companyfinancialstatement')),
            ],
            options={
                'ordering': ['financial_requirement__name'],
            },
        ),
        migrations.CreateModel(
            name='BidLitigationResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_litigation', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_litigation_responses', to='bids.bid')),
                ('litigations', models.ManyToManyField(related_name='bids_litigation_responses', to='accounts.companylitigation')),
                ('tender_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_litigation_responses', to='tenders.tenderrequireddocument')),
            ],
            options={
                'ordering': ['tender_document__name'],
            },
        ),
        migrations.CreateModel(
            name='BidOfficeResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_office_responses', to='bids.bid')),
                ('office', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bids_office_responses', to='accounts.companyoffice')),
                ('tender_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_office_responses', to='tenders.tenderrequireddocument')),
            ],
            options={
                'ordering': ['tender_document__name'],
            },
        ),
        migrations.CreateModel(
            name='BidPersonnelResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complied', models.BooleanField(default=False)),
                ('jv_contribution', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('notes', models.TextField(blank=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_personnel_responses', to='bids.bid')),
                ('personnel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bids_personnel_responses', to='accounts.companypersonnel')),
                ('personnel_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_personnel_responses', to='tenders.tenderpersonnelrequirement')),
            ],
            options={
                'ordering': ['personnel_requirement__role'],
            },
        ),
        migrations.CreateModel(
            name='BidScheduleResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposed_quantity', models.PositiveIntegerField()),
                ('proposed_delivery_date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_schedule_responses', to='bids.bid')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_schedule_responses', to='tenders.tenderscheduleitem')),
            ],
            options={
                'ordering': ['schedule_item__commodity'],
            },
        ),
        migrations.CreateModel(
            name='BidSourceResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('currency', models.CharField(choices=[('TZS', 'Tanzanian Shilling'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('JPY', 'Japanese Yen'), ('CNY', 'Chinese Yuan')], default='TZS', max_length=3)),
                ('notes', models.TextField(blank=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_source_responses', to='bids.bid')),
                ('sources', models.ManyToManyField(related_name='bids_source_responses', to='accounts.companysourceoffund')),
                ('tender_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_source_responses', to='tenders.tenderrequireddocument')),
            ],
            options={
                'ordering': ['tender_document__name'],
            },
        ),
        migrations.CreateModel(
            name='BidTechnicalResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('complied', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_technical_responses', to='bids.bid')),
                ('technical_specification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_technical_responses', to='tenders.tendertechnicalspecification')),
            ],
            options={
                'ordering': ['technical_specification__category'],
            },
        ),
        migrations.CreateModel(
            name='BidTurnoverResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('currency', models.CharField(choices=[('TZS', 'Tanzanian Shilling'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('JPY', 'Japanese Yen'), ('CNY', 'Chinese Yuan')], default='TZS', max_length=3)),
                ('complied', models.BooleanField(default=False)),
                ('jv_contribution', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('notes', models.TextField(blank=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_turnover_responses', to='bids.bid')),
                ('turnover_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids_turnover_responses', to='tenders.tenderturnoverrequirement')),
                ('turnovers', models.ManyToManyField(related_name='bids_turnover_responses', to='accounts.companyannualturnover')),
            ],
            options={
                'ordering': ['turnover_requirement__label'],
            },
        ),
        migrations.AddIndex(
            model_name='bid',
            index=models.Index(fields=['slug', 'status'], name='bids_bid_slug_2ab057_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bid',
            unique_together={('tender', 'company')},
        ),
        migrations.AlterUniqueTogether(
            name='biddocument',
            unique_together={('bid', 'tender_document')},
        ),
        migrations.AlterUniqueTogether(
            name='bidexperienceresponse',
            unique_together={('bid', 'experience_requirement')},
        ),
        migrations.AlterUniqueTogether(
            name='bidfinancialresponse',
            unique_together={('bid', 'financial_requirement')},
        ),
        migrations.AlterUniqueTogether(
            name='bidlitigationresponse',
            unique_together={('bid', 'tender_document')},
        ),
        migrations.AlterUniqueTogether(
            name='bidofficeresponse',
            unique_together={('bid', 'tender_document')},
        ),
        migrations.AlterUniqueTogether(
            name='bidpersonnelresponse',
            unique_together={('bid', 'personnel_requirement')},
        ),
        migrations.AlterUniqueTogether(
            name='bidscheduleresponse',
            unique_together={('bid', 'schedule_item')},
        ),
        migrations.AlterUniqueTogether(
            name='bidsourceresponse',
            unique_together={('bid', 'tender_document')},
        ),
        migrations.AlterUniqueTogether(
            name='bidtechnicalresponse',
            unique_together={('bid', 'technical_specification')},
        ),
        migrations.AlterUniqueTogether(
            name='bidturnoverresponse',
            unique_together={('bid', 'turnover_requirement')},
        ),
    ]
