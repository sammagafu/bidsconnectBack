# Generated by Django 5.1.6 on 2025-03-08 11:15

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EvaluationCriterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('max_score', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='ProcurementProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('open', 'Open Tendering'), ('selective', 'Selective Tendering'), ('limited', 'Limited Tendering'), ('direct', 'Direct Procurement')], max_length=20)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=16)),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('validity_days', models.PositiveIntegerField(default=90)),
                ('technical_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('financial_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('combined_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('qualified', 'Technically Qualified'), ('disqualified', 'Disqualified'), ('awarded', 'Awarded'), ('withdrawn', 'Withdrawn')], default='draft', max_length=20)),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_bids', to='accounts.customuser')),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='BidDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('technical', 'Technical Proposal'), ('financial', 'Financial Proposal'), ('qualification', 'Qualification Documents'), ('bid_bond', 'Bid Bond')], max_length=20)),
                ('file', models.FileField(upload_to='bid_documents/%Y/%m/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='tenders.bid')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('comments', models.TextField(blank=True)),
                ('evaluated_at', models.DateTimeField(auto_now_add=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='tenders.bid')),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenders.evaluationcriterion')),
                ('evaluated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Tender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('reference_number', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('submission_deadline', models.DateTimeField()),
                ('clarification_deadline', models.DateTimeField()),
                ('evaluation_start_date', models.DateTimeField(blank=True, null=True)),
                ('evaluation_end_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_budget', models.DecimalField(decimal_places=2, max_digits=16)),
                ('currency', models.CharField(default='TSH', max_length=3)),
                ('bid_bond_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('address', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('published', 'Published'), ('evaluation', 'Under Evaluation'), ('awarded', 'Awarded'), ('closed', 'Closed'), ('canceled', 'Canceled')], default='draft', max_length=20)),
                ('last_status_change', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenders.category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tenders', to='accounts.customuser')),
                ('evaluation_committee', models.ManyToManyField(blank=True, related_name='evaluation_tenders', to='accounts.customuser')),
                ('procurement_process', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenders.procurementprocess')),
            ],
            options={
                'ordering': ['-publication_date'],
            },
        ),
        migrations.AddField(
            model_name='evaluationcriterion',
            name='tender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation_criteria', to='tenders.tender'),
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=16)),
                ('signed_at', models.DateTimeField(blank=True, null=True)),
                ('bid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='awarded_contract', to='tenders.bid')),
                ('signed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser')),
                ('tender', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contract', to='tenders.tender')),
            ],
        ),
        migrations.AddField(
            model_name='bid',
            name='tender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='tenders.tender'),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('status_change', 'Status Change'), ('document_upload', 'Document Upload')], max_length=20)),
                ('details', models.JSONField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser')),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenders.tender')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TenderDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('notice', 'Tender Notice'), ('technical', 'Technical Specifications'), ('financial', 'Financial Requirements'), ('evaluation', 'Evaluation Criteria'), ('contract', 'Draft Contract')], max_length=20)),
                ('file', models.FileField(upload_to='tender_documents/%Y/%m/')),
                ('version', models.CharField(max_length=10)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='tenders.tender')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenders.category')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('category', 'slug')},
            },
        ),
        migrations.AddIndex(
            model_name='tender',
            index=models.Index(fields=['-publication_date'], name='tenders_ten_publica_750081_idx'),
        ),
        migrations.AddIndex(
            model_name='tender',
            index=models.Index(fields=['status'], name='tenders_ten_status_955cba_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['start_date'], name='tenders_con_start_d_f3f4f0_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['end_date'], name='tenders_con_end_dat_be55f6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bid',
            unique_together={('tender', 'bidder')},
        ),
        migrations.AlterUniqueTogether(
            name='tenderdocument',
            unique_together={('tender', 'document_type', 'version')},
        ),
    ]
