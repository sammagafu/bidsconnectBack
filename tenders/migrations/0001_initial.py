# Generated by Django 5.1.6 on 2025-08-14 21:11

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgencyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='agency_logos/%Y/%m/')),
                ('address', models.TextField(blank=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Agency',
                'verbose_name_plural': 'Agencies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Industry Category',
                'verbose_name_plural': 'Industry Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProcurementProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('type', models.CharField(choices=[('open', 'Open Tendering'), ('selective', 'Selective Tendering'), ('limited', 'Limited Tendering'), ('direct', 'Direct Procurement')], max_length=20)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True)),
                ('notification_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='immediate', max_length=20)),
                ('last_notified', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preference', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='tenders.category')),
            ],
            options={
                'verbose_name': 'Industry Sub Category',
                'verbose_name_plural': 'Industry Sub Categories',
                'ordering': ['name'],
                'unique_together': {('category', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Tender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('reference_number', models.CharField(max_length=50, unique=True)),
                ('tender_type_country', models.CharField(choices=[('National', 'National Tendering'), ('International', 'International Tendering')], max_length=30)),
                ('tender_type_sector', models.CharField(choices=[('Private Company', 'Private Company Tendering'), ('Public Sector', 'Public Sector Tendering'), ('Non-Governmental Organization', 'Non-Governmental Organization Tendering'), ('Government Agency', 'Government Agency Tendering')], max_length=50)),
                ('currency', models.CharField(choices=[('TZS', 'Tanzanian Shilling'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('JPY', 'Japanese Yen'), ('CNY', 'Chinese Yuan')], default='TZS', max_length=3)),
                ('description', models.TextField(blank=True)),
                ('publication_date', models.DateTimeField(blank=True, null=True)),
                ('submission_deadline', models.DateTimeField()),
                ('validity_period_days', models.PositiveIntegerField(default=90)),
                ('completion_period_days', models.PositiveIntegerField(blank=True, null=True)),
                ('litigation_history_start', models.DateField(blank=True, null=True)),
                ('litigation_history_end', models.DateField(blank=True, null=True)),
                ('tender_document', models.FileField(blank=True, null=True, upload_to='tender_docs/%Y/%m/')),
                ('tender_fees', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('tender_securing_type', models.CharField(choices=[('Tender Security', 'Tender Security'), ('Tender Securing Declaration', 'Tender Securing Declaration')], default='Tender Securing Declaration', max_length=30)),
                ('tender_security_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('tender_security_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('tender_security_currency', models.CharField(choices=[('TZS', 'Tanzanian Shilling'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('JPY', 'Japanese Yen'), ('CNY', 'Chinese Yuan')], default='TZS', max_length=3)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('published', 'Published'), ('evaluation', 'Under Evaluation'), ('awarded', 'Awarded'), ('closed', 'Closed'), ('canceled', 'Canceled')], default='draft', max_length=20)),
                ('last_status_change', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allow_alternative_delivery', models.BooleanField(default=False, help_text='Whether bidders can propose alternative delivery schedules')),
                ('source_of_funds', models.CharField(choices=[('government', 'Government Funds'), ('loan', 'Loan'), ('credit', 'Credit'), ('grant', 'Grant'), ('other', 'Other')], default='government', max_length=20)),
                ('re_advertisement_count', models.PositiveIntegerField(default=0, help_text='Number of times this tender has been re-advertised')),
                ('agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenders.agencydetails')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenders.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tenders', to=settings.AUTH_USER_MODEL)),
                ('procurement_process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenders.procurementprocess')),
                ('re_advertised_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='re_advertisements', to='tenders.tender')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenders.subcategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenderExperienceRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('general', 'General Experience'), ('specific', 'Specific/Similar Projects')], default='specific', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('contract_count', models.PositiveIntegerField(default=1)),
                ('min_value', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('currency', models.CharField(choices=[('TZS', 'Tanzanian Shilling'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('JPY', 'Japanese Yen'), ('CNY', 'Chinese Yuan')], default='TZS', max_length=3)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('complied', models.BooleanField(default=False)),
                ('reputation_notes', models.TextField(blank=True, help_text='Reputation requirements or notes')),
                ('jv_compliance', models.CharField(blank=True, choices=[('separate', 'Separate for Each Partner'), ('combined', 'Combined for JV')], default='combined', max_length=20)),
                ('jv_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('jv_aggregation_note', models.TextField(blank=True, help_text='Notes on aggregation for JV, e.g., no aggregation for value')),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experience_requirements', to='tenders.tender')),
            ],
        ),
        migrations.CreateModel(
            name='TenderFinancialRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Current Ratio', max_length=100)),
                ('formula', models.CharField(blank=True, help_text='e.g., CA/CL', max_length=255)),
                ('minimum', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('unit', models.CharField(blank=True, help_text='e.g., Ratio, %', max_length=50)),
                ('actual_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('complied', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('jv_compliance', models.CharField(blank=True, choices=[('separate', 'Separate for Each Partner'), ('combined', 'Combined for JV')], default='combined', max_length=20)),
                ('financial_sources', models.TextField(blank=True, help_text='e.g., Cash, Loans, Grants')),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_requirements', to='tenders.tender')),
            ],
        ),
        migrations.CreateModel(
            name='TenderPersonnelRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=100)),
                ('min_education', models.CharField(choices=[('certificate', 'Certificate'), ('diploma', 'Diploma'), ('bachelor', "Bachelor's Degree"), ('master', "Master's Degree"), ('phd', 'PhD')], default='bachelor', max_length=20)),
                ('professional_registration', models.CharField(blank=True, help_text='e.g., ERB Registered', max_length=100)),
                ('min_experience_yrs', models.PositiveSmallIntegerField(default=3)),
                ('appointment_duration_years', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('nationality_required', models.CharField(blank=True, max_length=100)),
                ('language_required', models.CharField(blank=True, max_length=100)),
                ('complied', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('age_min', models.PositiveSmallIntegerField(default=18, validators=[django.core.validators.MinValueValidator(18)])),
                ('age_max', models.PositiveSmallIntegerField(default=60, validators=[django.core.validators.MaxValueValidator(60)])),
                ('specialized_education', models.TextField(blank=True, help_text='e.g., Mechanical Engineering Specialization')),
                ('professional_certifications', models.TextField(blank=True, help_text='e.g., HVAC Certification')),
                ('jv_compliance', models.CharField(blank=True, choices=[('separate', 'Separate for Each Partner'), ('combined', 'Combined for JV')], default='combined', max_length=20)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personnel_requirements', to='tenders.tender')),
            ],
        ),
        migrations.CreateModel(
            name='TenderRequiredDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('document_type', models.CharField(default='other', max_length=120)),
                ('is_required', models.CharField(choices=[('required', 'Required'), ('optional', 'Optional')], default='required', help_text='Is this document required or optional?', max_length=10)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_documents', to='tenders.tender')),
            ],
        ),
        migrations.CreateModel(
            name='TenderScheduleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=50)),
                ('unit', models.CharField(max_length=50)),
                ('quantity', models.PositiveIntegerField()),
                ('specification', models.TextField(blank=True)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_items', to='tenders.tender')),
            ],
        ),
        migrations.CreateModel(
            name='TenderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('published', 'Published'), ('evaluation', 'Under Evaluation'), ('awarded', 'Awarded'), ('closed', 'Closed'), ('canceled', 'Canceled')], max_length=20)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='tenders.tender')),
            ],
            options={
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='TenderSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('keywords', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tenders.category')),
                ('procurement_process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tenders.procurementprocess')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tenders.subcategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tender_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TenderNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('delivery_status', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='tenders.tender')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='tenders.tendersubscription')),
            ],
        ),
        migrations.CreateModel(
            name='TenderTechnicalSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('service', 'Service Specifications'), ('technology', 'Technology Specifications'), ('security', 'Security Specifications'), ('architecture', 'Technical Architecture'), ('usability', 'Usability'), ('testing', 'Testing and Quality Assurance'), ('conformity', 'Conformity to Technical Requirements')], max_length=100)),
                ('description', models.TextField(blank=True)),
                ('complied', models.BooleanField(default=False)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technical_specifications', to='tenders.tender')),
            ],
        ),
        migrations.CreateModel(
            name='TenderTurnoverRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='Average Annual Turnover', max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('currency', models.CharField(choices=[('TZS', 'Tanzanian Shilling'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('JPY', 'Japanese Yen'), ('CNY', 'Chinese Yuan')], default='TZS', max_length=3)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('complied', models.BooleanField(default=False)),
                ('jv_compliance', models.CharField(blank=True, choices=[('separate', 'Separate for Each Partner'), ('combined', 'Combined for JV')], default='combined', max_length=20)),
                ('jv_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turnover_requirements', to='tenders.tender')),
            ],
        ),
        migrations.AddIndex(
            model_name='tender',
            index=models.Index(fields=['slug', 'status'], name='tenders_ten_slug_c5a047_idx'),
        ),
        migrations.AddIndex(
            model_name='tendersubscription',
            index=models.Index(fields=['user', 'is_active'], name='tenders_ten_user_id_95b350_idx'),
        ),
        migrations.AddIndex(
            model_name='tendersubscription',
            index=models.Index(fields=['slug'], name='tenders_ten_slug_750636_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tendersubscription',
            unique_together={('user', 'category', 'subcategory', 'procurement_process')},
        ),
        migrations.AlterUniqueTogether(
            name='tendernotification',
            unique_together={('subscription', 'tender')},
        ),
    ]
